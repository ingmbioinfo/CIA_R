% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CIA_core.R
\name{score_all_signatures}
\alias{score_all_signatures}
\title{Calculate Signature Scores}
\usage{
score_all_signatures(
  data,
  signatures_input,
  return_score = FALSE,
  seurat_assay = "RNA",
  seurat_layer = "data",
  sce_assay = "logcounts",
  score_mode = "raw",
  n_cpus = NULL
)
}
\arguments{
\item{data}{A numeric matrix, data frame, \code{SeuratObject}, or
\code{SingleCellExperiment} with genes in rows and cells in columns,
representing the expression level of each gene in each cell.}

\item{signatures_input}{A character string representing the file path to the
TSV file containing the gene signatures, or a list where each element is a
vector of gene names with names of the list elements representing signature
names.}

\item{return_score}{Boolean to return scores directly (default FALSE).}

\item{seurat_assay}{Assay for Seurat objects (default "RNA").}

\item{seurat_layer}{Character string, indicating which layer to use of the
Seurat object. Defaults to "data".}

\item{sce_assay}{Character string, indicating which assay to use of the
\code{SingleCellExperiment} object. Defaults to "logcounts".}

\item{score_mode}{Character string, specifying the calculation mode to be
used for scores: "raw", "scaled", or log-transformed ("log", "log2", "log10").
In the scope of this function, this defaults to "raw".}

\item{n_cpus}{Number of CPU cores for parallel computation (default uses a
quarter of available cores).}
}
\value{
Matrix of signature scores if \code{return_score} is set to TRUE or if
\code{data} is a matrix/data,frame.
Otherwise, updates the input object's metadata with scores.
}
\description{
This function calculates the signature scores for each gene set in the
provided data. It loads the gene signatures from an input source and computes
the scores based on the expression levels of these genes in the data.
}
\examples{
SO <- readRDS(system.file("extdata", "pbmc3k.rds", package = "CIA"))
library("Seurat")
SO <- NormalizeData(SO,
                   normalization.method = "LogNormalize",
                   scale.factor = 10000)
gmt <- load_signatures(system.file("extdata", "atlas.gmt", package = "CIA"))

## Checking all signatures at once
score_all_signatures(data = SO,
                     signatures_inpu = gmt,
                     n_cpus = 2)
}
\seealso{
\code{\link[=score_signature]{score_signature()}} \code{\link[=CIA_classify]{CIA_classify()}}
}
